*vim_tools.txt*	    For Vim version 7.4.    Last Change: 2015 Mar 11

Plugin with some helpful commands for editing Vim scripts.

This plugin loads |codeTools|, which adds more functionality than is listed
here.

This plugin adds the following functionality:
2. Code Folding Text			    |vim_tools-code-folding|
3. Comment/Uncomment Lines		    |vim_tools-comment|
					    |vim_tools-uncomment|

=================================================================================
2. Code Folding Text			    *vim_tools-code-folding*

Folded code produces the text
    [ nnnnn lines ]    <first line of the fold>~

The fold marker is removed from the first line of the fold. If the first line
is a comment, the '"' is also removed. The fold text is indented to match the
original indentation of the first line of the fold. The leading white space in
the examples above are simply to offset the examples from the normal help text.

=================================================================================
3. Comment/Uncomment Lines		    *vim_tools-comment*
					    *vim_tools-uncomment*

A range of lines can be commented with ". If no count is given, 1 (one) is
used. To comment the lines, use the normal map [count]<Leader>c. Blank lines are
not commented.

Similarly, a range of lines can be uncommented by typing [count]<Leader>u.
Note that this function just removes the first '"' that it encounters on each
line. It's possible, if the count is incorrect, to uncomment a legitimate
comment at the end of a line:
    map <Leader>i $i   " quick insert at the end~
Using <Leader>u on the above line will produce this result:
    map <Leader>i $i    quick insert at the end~

Note that these commands do not work as expected with folded code. With the
cursor on this fold:
    [    10 lines ]    define the function~
and pressing <Leader>c, will result in
    "" define the function {{{~
    " the rest of the Vim code, unfolded~
To comment the entire fold, use n<Leader>c, where n is the number of lines
folded; you don't need to open the fold before-hand.

vim:tw=78:ts=8:ft=help:norl:

